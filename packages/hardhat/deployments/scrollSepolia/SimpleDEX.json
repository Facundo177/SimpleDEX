{
  "address": "0x057cD3082EfED32d5C907801BF3628B27D88fD80",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenB",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountAddedTokenA",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountAddedTokenB",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalTokenA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalTokenB",
          "type": "uint256"
        }
      ],
      "name": "LiquidityAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountRemovedTokenA",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountRemovedTokenB",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalTokenA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalTokenB",
          "type": "uint256"
        }
      ],
      "name": "LiquidityRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "FromToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOffered",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "ToToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReceived",
          "type": "uint256"
        }
      ],
      "name": "TokensSwapped",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addressTokenA",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addressTokenB",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountAIn",
          "type": "uint256"
        }
      ],
      "name": "swapAforB",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountBIn",
          "type": "uint256"
        }
      ],
      "name": "swapBforA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xceb1971209e4caaa43eeba390e48afbbb00db70f8070cfc2bfe2d6c03caa00d7",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x057cD3082EfED32d5C907801BF3628B27D88fD80",
    "transactionIndex": 0,
    "gasUsed": "1476065",
    "logsBloom": "0x
    "blockHash": "0x55017c7fe6f2eff362629f513201fede188b0d89a1203ca1866c3d08db90b505",
    "transactionHash": "0xceb1971209e4caaa43eeba390e48afbbb00db70f8070cfc2bfe2d6c03caa00d7",
    "logs": [],
    "blockNumber": 7561456,
    "cumulativeGasUsed": "1476065",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xF357118EBd576f3C812c7875B1A1651a7f140E9C",
    "0x519b05b3655F4b89731B677d64CEcf761f4076f6"
  ],
  "numDeployments": 2,
  "solcInputHash": "20956564c8415ec12e1a806aeab1e0b1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountAddedTokenA\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountAddedTokenB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalTokenA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalTokenB\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountRemovedTokenA\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountRemovedTokenB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalTokenA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalTokenB\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"FromToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOffered\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ToToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"TokensSwapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressTokenA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressTokenB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountAIn\",\"type\":\"uint256\"}],\"name\":\"swapAforB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountBIn\",\"type\":\"uint256\"}],\"name\":\"swapBforA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/simpleDEX.sol\":\"SimpleDEX\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/simpleDEX.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.22;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n//function balanceOf(address account) external view returns (uint256);\\r\\n//function transfer(address to, uint256 value) external returns (bool);\\r\\n//function approve(address spender, uint256 value) external returns (bool);\\r\\n//function transferFrom(address from, address to, uint256 value) external returns (bool);\\r\\n\\r\\ncontract SimpleDEX {\\r\\n    address public owner;\\r\\n    address public addressTokenA;\\r\\n    address public addressTokenB;\\r\\n    IERC20 private tokenA;\\r\\n    IERC20 private tokenB;\\r\\n\\r\\n    mapping (address => uint) private poolDeLiquidez;\\r\\n\\r\\n    // Definici\\u00f3n de modificadores\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"Solo el propietario puede ejecutar esta funcion.\\\");\\r\\n        _; // Contin\\u00faa con la ejecuci\\u00f3n de la funci\\u00f3n modificada\\r\\n    }\\r\\n\\r\\n\\r\\n    // Definici\\u00f3n de eventos\\r\\n    // Se emite cuando se a\\u00f1ade liquidez.\\r\\n    event LiquidityAdded(uint256 indexed amountAddedTokenA, uint256 indexed amountAddedTokenB, uint256 totalTokenA, uint256 totalTokenB);\\r\\n    // Se emite cuando se realiza un intercambio.\\r\\n    event TokensSwapped(address indexed user, address FromToken, uint256 amountOffered, address ToToken, uint256 amountReceived);\\r\\n    // Se emite cuando se retira liquidez.\\r\\n    event LiquidityRemoved(uint256 indexed amountRemovedTokenA, uint256 indexed amountRemovedTokenB, uint256 totalTokenA, uint256 totalTokenB);\\r\\n\\r\\n\\r\\n    // Funciones\\r\\n    constructor(address _tokenA, address _tokenB){ \\r\\n        // Establece el due\\u00f1o del contrato al ser desplegado\\r\\n        owner = msg.sender;\\r\\n        // Guardo las addresses de las tokens\\r\\n        addressTokenA = _tokenA;\\r\\n        addressTokenB = _tokenB;\\r\\n        // Interfaces para interactuar con las tokens\\r\\n        tokenA = IERC20(_tokenA);\\r\\n        tokenB = IERC20(_tokenB);\\r\\n    }\\r\\n\\r\\n\\r\\n    // Funci\\u00f3n que a\\u00f1ade liquidez al pool, solo puede hacerlo el owner de este contrato\\r\\n    function addLiquidity(uint256 amountA, uint256 amountB) external onlyOwner {\\r\\n        require(tokenA.balanceOf(msg.sender) >= amountA && tokenB.balanceOf(msg.sender) >= amountB, \\\"No puede agregar un balance mayor al que posee.\\\");\\r\\n\\r\\n        // Aprobaci\\u00f3n para poder retirar las tokens\\r\\n        bool isAapproved = tokenA.approve(msg.sender, amountA);\\r\\n        bool isBapproved = tokenB.approve(msg.sender, amountB);\\r\\n        require(isAapproved && isBapproved, \\\"Transaccion no aprobada.\\\");\\r\\n\\r\\n        // Retiro de las tokens de la billetera del owner\\r\\n        bool didAtransfer = tokenA.transferFrom(msg.sender, address(this), amountA);\\r\\n        bool didBtransfer = tokenB.transferFrom(msg.sender, address(this), amountB);\\r\\n        require(didAtransfer && didBtransfer, \\\"No se pudo realizar la transferencia.\\\");\\r\\n\\r\\n        // Actualizo el mapeo de los balances de ambas tokens\\r\\n        poolDeLiquidez[addressTokenA] = tokenA.balanceOf(address(this));\\r\\n        poolDeLiquidez[addressTokenB] = tokenB.balanceOf(address(this));\\r\\n\\r\\n        // Evento\\r\\n        emit LiquidityAdded(amountA, amountB, poolDeLiquidez[addressTokenA], poolDeLiquidez[addressTokenB]);\\r\\n    }\\r\\n\\r\\n\\r\\n    function swapAforB(uint256 amountAIn) external {\\r\\n        require(tokenA.balanceOf(msg.sender) >= amountAIn, \\\"No tiene el balance suficiente de TokenA.\\\");\\r\\n\\r\\n        // Aprobaci\\u00f3n para poder retirar las tokens A\\r\\n        bool isAapproved = tokenA.approve(msg.sender, amountAIn);\\r\\n        require(isAapproved, \\\"Transaccion no aprobada.\\\");\\r\\n\\r\\n        // Retiro de las tokens de la billetera del usuario\\r\\n        bool didTransferFrom = tokenA.transferFrom(msg.sender, address(this), amountAIn);\\r\\n        require(didTransferFrom, \\\"No se pudo realizar la transferencia.\\\");\\r\\n\\r\\n        // C\\u00e1lculos para la conversi\\u00f3n\\r\\n        uint256 A0 = tokenA.balanceOf(address(this));\\r\\n        uint256 B0 = tokenB.balanceOf(address(this));\\r\\n        uint256 dB = B0 - ((A0 * B0) / (A0 + amountAIn));\\r\\n\\r\\n        // Actualizo el mapeo de los balances de ambas tokens (antes de transferirle al usuario)\\r\\n        poolDeLiquidez[addressTokenA] += amountAIn;\\r\\n        poolDeLiquidez[addressTokenB] -= dB;\\r\\n\\r\\n        // Transferencia de las tokens B\\r\\n        bool didTransfer = tokenB.transfer(msg.sender, dB);\\r\\n        require(didTransfer, \\\"No se pudo realizar el cambio de tokens.\\\");\\r\\n\\r\\n        // Evento\\r\\n        emit TokensSwapped(msg.sender, addressTokenA, amountAIn, addressTokenB, dB);\\r\\n    }\\r\\n\\r\\n\\r\\n    function swapBforA(uint256 amountBIn) external {\\r\\n        require(tokenB.balanceOf(msg.sender) >= amountBIn, \\\"No tiene el balance suficiente de TokenB.\\\");\\r\\n\\r\\n        // Aprobaci\\u00f3n para poder retirar las tokens B\\r\\n        bool isBapproved = tokenB.approve(msg.sender, amountBIn);\\r\\n        require(isBapproved, \\\"Transaccion no aprobada.\\\");\\r\\n\\r\\n        // Retiro de las tokens de la billetera del usuario\\r\\n        bool didTransferFrom = tokenB.transferFrom(msg.sender, address(this), amountBIn);\\r\\n        require(didTransferFrom, \\\"No se pudo realizar la transferencia.\\\");\\r\\n\\r\\n        // C\\u00e1lculos para la conversi\\u00f3n\\r\\n        uint256 A0 = tokenA.balanceOf(address(this));\\r\\n        uint256 B0 = tokenB.balanceOf(address(this));\\r\\n        uint256 dA = A0 - ((A0 * B0) / (B0 + amountBIn));\\r\\n\\r\\n        // Actualizo el mapeo de los balances de ambas tokens (antes de transferirle al usuario)\\r\\n        poolDeLiquidez[addressTokenA] -= dA;\\r\\n        poolDeLiquidez[addressTokenB] += amountBIn;\\r\\n\\r\\n        // Transferencia de las tokens A\\r\\n        bool didTransfer = tokenA.transfer(msg.sender, dA);\\r\\n        require(didTransfer, \\\"No se pudo realizar el cambio de tokens.\\\");\\r\\n\\r\\n        // Evento\\r\\n        emit TokensSwapped(msg.sender, addressTokenB, amountBIn, addressTokenA, dA);\\r\\n    }\\r\\n\\r\\n\\r\\n    function removeLiquidity(uint256 amountA, uint256 amountB) external onlyOwner {\\r\\n        require(tokenA.balanceOf(address(this)) >= amountA && tokenB.balanceOf(address(this)) >= amountB, \\\"No puede remover una liquidez mayor a la depositada en el contrato.\\\");\\r\\n\\r\\n        // Transfiere las tokens del contrato a la billetera del owner\\r\\n        bool didAtransfer = tokenA.transfer(msg.sender, amountA);\\r\\n        bool didBtransfer = tokenB.transfer(msg.sender, amountB);\\r\\n        require(didAtransfer && didBtransfer, \\\"No se pudo realizar la transferencia.\\\");\\r\\n\\r\\n        // Actualizo el mapeo de los balances de ambas tokens\\r\\n        poolDeLiquidez[addressTokenA] = tokenA.balanceOf(address(this));\\r\\n        poolDeLiquidez[addressTokenB] = tokenB.balanceOf(address(this));\\r\\n\\r\\n        // Evento\\r\\n        emit LiquidityRemoved(amountA, amountB, tokenA.balanceOf(address(this)), tokenB.balanceOf(address(this)));\\r\\n    }\\r\\n\\r\\n\\r\\n    function getPrice(address _token) external view returns (uint256) {\\r\\n        require(_token == addressTokenA || _token == addressTokenB, \\\"No es el address de una token.\\\");\\r\\n        if (_token == addressTokenA) {\\r\\n            return (poolDeLiquidez[addressTokenB] * 10 ** 18 / poolDeLiquidez[addressTokenA]);\\r\\n        }\\r\\n        else {\\r\\n            return (poolDeLiquidez[addressTokenA] * 10 ** 18 / poolDeLiquidez[addressTokenB]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\",\"keccak256\":\"0xc60fb746a5e9cc3e46142aced155faa90aa4cb7f7b4b8b5a1eea5a19e3f49de8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516200188f3803806200188f833981016040819052610031916100a4565b600080546001600160a01b03199081163317909155600180546001600160a01b03948516908316811790915560028054939094169282168317909355600380548216909317909255600480549092161790556100d7565b80516001600160a01b038116811461009f57600080fd5b919050565b600080604083850312156100b757600080fd5b6100c083610088565b91506100ce60208401610088565b90509250929050565b6117a880620000e76000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639d7de6b31161005b5780639d7de6b314610106578063e4f1f70a14610119578063e9a7fb691461012c578063f9c1d6771461013f57600080fd5b806341976e091461008d5780638014a7aa146100b35780638da5cb5b146100c85780639cd441da146100f3575b600080fd5b6100a061009b36600461151f565b610152565b6040519081526020015b60405180910390f35b6100c66100c136600461154f565b61026b565b005b6000546100db906001600160a01b031681565b6040516001600160a01b0390911681526020016100aa565b6100c6610101366004611568565b6106d8565b6100c6610114366004611568565b610bf2565b6100c661012736600461154f565b6110c5565b6001546100db906001600160a01b031681565b6002546100db906001600160a01b031681565b6001546000906001600160a01b038381169116148061017e57506002546001600160a01b038381169116145b6101cf5760405162461bcd60e51b815260206004820152601e60248201527f4e6f20657320656c206164647265737320646520756e6120746f6b656e2e000060448201526064015b60405180910390fd5b6001546001600160a01b0390811690831603610230576001546001600160a01b0390811660009081526005602052604080822054600254909316825290205461022090670de0b6b3a76400006115a0565b61022a91906115b7565b92915050565b6002546001600160a01b0390811660009081526005602052604080822054600154909316825290205461022090670de0b6b3a76400006115a0565b600480546040516370a0823160e01b8152339281019290925282916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156102b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dc91906115d9565b101561033c5760405162461bcd60e51b815260206004820152602960248201527f4e6f207469656e6520656c2062616c616e636520737566696369656e7465206460448201526832902a37b5b2b7211760b91b60648201526084016101c6565b6004805460405163095ea7b360e01b81523392810192909252602482018390526000916001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b791906115f2565b9050806103d65760405162461bcd60e51b81526004016101c690611614565b600480546040516323b872dd60e01b81526000926001600160a01b03909216916323b872dd9161040c913391309189910161164b565b6020604051808303816000875af115801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f91906115f2565b90508061046e5760405162461bcd60e51b81526004016101c69061166f565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104db91906115d9565b600480546040516370a0823160e01b815230928101929092529192506000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561052a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054e91906115d9565b9050600061055c86836116b4565b61056683856115a0565b61057091906115b7565b61057a90846116c7565b6001546001600160a01b03166000908152600560205260408120805492935083929091906105a99084906116c7565b90915550506002546001600160a01b0316600090815260056020526040812080548892906105d89084906116b4565b909155505060035460405163a9059cbb60e01b8152336004820152602481018390526000916001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561062f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065391906115f2565b9050806106725760405162461bcd60e51b81526004016101c6906116da565b600254600154604080516001600160a01b039384168152602081018b905292909116908201526060810183905233907f631fb37dba9bbcb8b2f3be2d669e365ae9f1bd850cc57dfe8b7ccd7d979a2bba906080015b60405180910390a250505050505050565b6000546001600160a01b031633146107025760405162461bcd60e51b81526004016101c690611722565b6003546040516370a0823160e01b815233600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa15801561074a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076e91906115d9565b101580156107eb5750600480546040516370a0823160e01b8152339281019290925282916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156107c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e891906115d9565b10155b61084f5760405162461bcd60e51b815260206004820152602f60248201527f4e6f207075656465206167726567617220756e2062616c616e6365206d61796f60448201526e391030b61038bab2903837b9b2b29760891b60648201526084016101c6565b60035460405163095ea7b360e01b8152336004820152602481018490526000916001600160a01b03169063095ea7b3906044016020604051808303816000875af11580156108a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c591906115f2565b6004805460405163095ea7b360e01b81523392810192909252602482018590529192506000916001600160a01b03169063095ea7b3906044016020604051808303816000875af115801561091d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094191906115f2565b905081801561094d5750805b6109695760405162461bcd60e51b81526004016101c690611614565b6003546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd9061099e90339030908a9060040161164b565b6020604051808303816000875af11580156109bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e191906115f2565b600480546040516323b872dd60e01b81529293506000926001600160a01b03909116916323b872dd91610a1a91339130918b910161164b565b6020604051808303816000875af1158015610a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5d91906115f2565b9050818015610a695750805b610a855760405162461bcd60e51b81526004016101c69061166f565b6003546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610acd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af191906115d9565b6001546001600160a01b0390811660009081526005602052604090819020929092556004805492516370a0823160e01b815230918101919091529116906370a0823190602401602060405180830381865afa158015610b54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7891906115d9565b600280546001600160a01b0390811660009081526005602090815260408083209590955560015483168252848220549354909216815283902054835192835290820152869188917f59af97c63758a02bfe06cf264fb416eba51db5020c6b61c1604d2fa1afafed61910160405180910390a3505050505050565b6000546001600160a01b03163314610c1c5760405162461bcd60e51b81526004016101c690611722565b6003546040516370a0823160e01b815230600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8891906115d9565b10158015610d055750600480546040516370a0823160e01b8152309281019290925282916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610cde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0291906115d9565b10155b610d835760405162461bcd60e51b815260206004820152604360248201527f4e6f2070756564652072656d6f76657220756e61206c6971756964657a206d6160448201527f796f722061206c61206465706f73697461646120656e20656c20636f6e7472616064820152623a379760e91b608482015260a4016101c6565b60035460405163a9059cbb60e01b8152336004820152602481018490526000916001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610dd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df991906115f2565b6004805460405163a9059cbb60e01b81523392810192909252602482018590529192506000916001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7591906115f2565b9050818015610e815750805b610e9d5760405162461bcd60e51b81526004016101c69061166f565b6003546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610ee5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0991906115d9565b6001546001600160a01b0390811660009081526005602052604090819020929092556004805492516370a0823160e01b815230918101919091529116906370a0823190602401602060405180830381865afa158015610f6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9091906115d9565b6002546001600160a01b03908116600090815260056020526040908190209290925560035491516370a0823160e01b8152306004820152859287927f58c759e695d5c8ccd2239ef635544361b167d875c0960cc41adeae5cdd83b91a929116906370a0823190602401602060405180830381865afa158015611016573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103a91906115d9565b600480546040516370a0823160e01b815230928101929092526001600160a01b0316906370a0823190602401602060405180830381865afa158015611083573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a791906115d9565b6040805192835260208301919091520160405180910390a350505050565b6003546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561110d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113191906115d9565b10156111915760405162461bcd60e51b815260206004820152602960248201527f4e6f207469656e6520656c2062616c616e636520737566696369656e7465206460448201526832902a37b5b2b7209760b91b60648201526084016101c6565b60035460405163095ea7b360e01b8152336004820152602481018390526000916001600160a01b03169063095ea7b3906044016020604051808303816000875af11580156111e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120791906115f2565b9050806112265760405162461bcd60e51b81526004016101c690611614565b6003546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd9061125b9033903090889060040161164b565b6020604051808303816000875af115801561127a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129e91906115f2565b9050806112bd5760405162461bcd60e51b81526004016101c69061166f565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611306573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132a91906115d9565b600480546040516370a0823160e01b815230928101929092529192506000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139d91906115d9565b905060006113ab86846116b4565b6113b583856115a0565b6113bf91906115b7565b6113c990836116c7565b6001546001600160a01b03166000908152600560205260408120805492935088929091906113f89084906116b4565b90915550506002546001600160a01b0316600090815260056020526040812080548392906114279084906116c7565b90915550506004805460405163a9059cbb60e01b81523392810192909252602482018390526000916001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015611483573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a791906115f2565b9050806114c65760405162461bcd60e51b81526004016101c6906116da565b600154600254604080516001600160a01b039384168152602081018b905292909116908201526060810183905233907f631fb37dba9bbcb8b2f3be2d669e365ae9f1bd850cc57dfe8b7ccd7d979a2bba906080016106c7565b60006020828403121561153157600080fd5b81356001600160a01b038116811461154857600080fd5b9392505050565b60006020828403121561156157600080fd5b5035919050565b6000806040838503121561157b57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761022a5761022a61158a565b6000826115d457634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156115eb57600080fd5b5051919050565b60006020828403121561160457600080fd5b8151801515811461154857600080fd5b60208082526018908201527f5472616e73616363696f6e206e6f206170726f626164612e0000000000000000604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208082526025908201527f4e6f207365207075646f207265616c697a6172206c61207472616e73666572656040820152643731b4b09760d91b606082015260800190565b8082018082111561022a5761022a61158a565b8181038181111561022a5761022a61158a565b60208082526028908201527f4e6f207365207075646f207265616c697a617220656c2063616d62696f206465604082015267103a37b5b2b7399760c11b606082015260800190565b60208082526030908201527f536f6c6f20656c2070726f706965746172696f20707565646520656a6563757460408201526f30b91032b9ba3090333ab731b4b7b71760811b60608201526080019056fea2646970667358221220689987af9594f7484ec7fd9c2cc5b9236dea9b271658f02a9348cbc9299873dc64736f6c63430008160033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3463,
        "contract": "contracts/simpleDEX.sol:SimpleDEX",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3465,
        "contract": "contracts/simpleDEX.sol:SimpleDEX",
        "label": "addressTokenA",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 3467,
        "contract": "contracts/simpleDEX.sol:SimpleDEX",
        "label": "addressTokenB",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 3470,
        "contract": "contracts/simpleDEX.sol:SimpleDEX",
        "label": "tokenA",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IERC20)754"
      },
      {
        "astId": 3473,
        "contract": "contracts/simpleDEX.sol:SimpleDEX",
        "label": "tokenB",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IERC20)754"
      },
      {
        "astId": 3477,
        "contract": "contracts/simpleDEX.sol:SimpleDEX",
        "label": "poolDeLiquidez",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)754": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}